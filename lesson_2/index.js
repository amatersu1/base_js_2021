"кот" > "код"; // true т.к.  к == к, о == о, т > д
"2" + 2 * "2"; // 24 сначала выполняется оператор умножение и происодит численное преобразование, затем выполняется бинарный плюс и т.к. 2 это строка 4 тоже преобразововается в строку, скалыдвается две строки '2' и '4'
undefined == null; // true это правило языка
undefined != null; // false т.к. null приравнивается к 0, а undefined к NaN
null == 0; // false
2 > "3"; // false т.к. 2 < 3
null - false + true; // 1 т.к. null приравнивается к 0 , 0-0+1
1 / "I"; // NaN
"2" * "3"; // 6 т.к преобразовывается к числам
4 + 5 + "o"; // 9o т.к. сначала математическое сложение 4+5, затем 9 складывается со строкой
"I" + 4 + 5; // I45 т.к. складывается строка с числом I4,затем тоже самое
"4" - 2; // 2 приравнивает 4 к числу
"4" - "4x"; // NaN
"23" == 23; // true приравнивает 23 к числу
"-4" / 0 + 1; // -Infinity при деление на 0 получается бесконечность
null + 1; // 1 null приравнивается к 0
undefined + null; // NaN undefined приравнивается к NaN , а null к 0
1 === "1"; // false тройное равно сравнивает еще и тип данных
"2" > 10; // false 2 приравнивает к числу 2<10
NaN == undefined; // false такое правило в js, что udefined == только null
